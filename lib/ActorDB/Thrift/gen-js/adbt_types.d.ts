//
// Autogenerated by Thrift Compiler (0.9.3)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


declare enum ErrorCode {
  NotLoggedIn = 1,
  EmptyActorName = 2,
  InvalidActorName = 3,
  InvalidType = 4,
  NotPermitted = 5,
  SqlError = 6,
  ConsensusTimeout = 7,
  ConsensusImpossibleAtm = 8,
  LocalNodeMissing = 9,
  MissingGroupInsert = 10,
  MissingNodesInsert = 11,
  MissingRootUser = 12,
  LoginFailed = 13,
  NotInitialized = 14,
  NoCreate = 15,
  Error = 100,
}

declare class Val {
  bigint: number;
  integer: number;
  smallint: number;
  real: number;
  bval: boolean;
  text: string;
  isnull: boolean;
  blob: string;

  constructor(args?: { bigint: number; integer: number; smallint: number; real: number; bval: boolean; text: string; isnull: boolean; blob: string; });
}

declare class ReadResult {
  hasMore: boolean;
  columns: string[];
  rows: { [k: string]: Val; }[];

  constructor(args?: { hasMore: boolean; columns: string[]; rows: { [k: string]: Val; }[]; });
}

declare class WriteResult {
  lastChangeRowid: number;
  rowsChanged: number;

  constructor(args?: { lastChangeRowid: number; rowsChanged: number; });
}

declare class LoginResult {
  success: boolean;
  error: string;
  readaccess: string[];
  writeaccess: string[];

  constructor(args?: { success: boolean; error?: string; readaccess?: string[]; writeaccess?: string[]; });
}

declare class Result {
  rdRes: ReadResult;
  wrRes: WriteResult;

  constructor(args?: { rdRes: ReadResult; wrRes: WriteResult; });
}

declare class InvalidRequestException extends Thrift.TException {
  code: ErrorCode;
  info: string;

  constructor(args?: { code: ErrorCode; info: string; });
}

declare var VERSION: string;
